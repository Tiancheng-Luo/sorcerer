h1. Sorcerer -- Recovering the Source

p. Sorcerer will generate Ruby code from a Ripper-like abstract syntax
tree (i.e. S-Expressions).

p. Sorcerer is targetted mainly at small snippets of Ruby code,
expressable in a single line.  Longer examples may be re-sourced, but
they will be rendered in a single line format.

*Version: 0.3.1*

h2. Limitations

Sorcerer is only testing on Ruby 1.9.

bq. <em>Technically, Sorcerer should work on Ruby 1.8, but since Ripper is
1.9 I've only tried it on that platform.</em>

h2. Links

Documents              :: http://github.com/jimweirich/sorcerer
Git Clone              :: git://github.com/jimweirich/sorcerer.git
Issues / Bug Tracking  :: https://github.com/jimweirich/sorcerer/issues
Continuous Integration :: http://travis-ci.org/#!/jimweirich/sorcerer

h2. Examples

<pre style="background: LightGray">
  sexp = [:binary,
           [:var_ref, [:@ident, "a", [1, 0]]],
           :+,
           [:var_ref, [:@ident, "b", [1, 4]]]]
  puts Sorcerer.source(sexp)
</pre>

will generate

<pre style="background: LightGray">
  a + b
</pre>

Ripper may be used to produce the s-expressions used by Sorcerer.  The following will produce the same output.

<pre style="background: LightGrey">
  sexp = Ripper::SexpBuilder.new("a + b").parse
  puts Sorcerer.source(sexp)
</pre>

h2. Options

h3. No Options

By default, sorcerer will output its source in single line mode.

For example, given:

<pre style="background: LightGrey">
  sexp = Ripper::SexpBuilder.new("def foo; bar; end").parse
</pre>

Then the following

<pre style="background: LightGrey">
  puts Sorcerer.source(sexp)
</pre>

generates single line output (the default):

<pre style="background: LightBlue">
def foo; bar; end
</pre>

h3. Multi-Line Output

If you want multi-line output of source, add the multiline option to
the source command.

For example, given the sexp generated above, then this

<pre style="background: LightGrey">
  puts Sorcerer.source(sexp, multiline: true)
</pre>

generates multi-line output

<pre style="background: LightBlue">
def foo
bar
end
</pre>

(Note that all multi-line output will have a final newline.)

h3. Indentation

By default, sorcerer does not indent its multiline output.  Adding the
"indent" option will cause the output to be indented.

For example, given the sexp generated above, then the following

<pre style="background: LightGrey">
  puts Sorcerer.source(sexp, indent: true)
</pre>

generates indented output:

<pre style="background: LightBlue">
def foo
  bar
end
</pre>

h3. Debugging Output

If you wish to see the S-Expressions processed by Sorcerer and the
output emitted, then use the debug option:

<pre style="background: LightGrey">
  puts Sorcerer.source(sexp, debug: true)
</pre>

h2. History

* 0.0.7 - Basic single line version

* 0.1.0 - Added support for multi-line output. Improved rendering of a
          number of constructs

* 0.2.0 - Added support for indented output.

* 0.3.0 - New hash literal support. Multi-line output always end with
          a newline.

* 0.3.1 - 1.9.3 support. Indenting stabby procs. RedCloth not required
          for testing.
