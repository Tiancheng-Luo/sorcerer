h1. Sorcerer -- Recovering the Source

p. Sorcerer will generate Ruby code from a Ripper-like abstract syntax
tree (i.e. S-Expressions).

p. Sorcerer is targetted mainly at small snippets of Ruby code,
expressable in a single line.  Longer examples may be re-sourced, but
they will be rendered in a single line format.

h2. Limitations

Sorcerer is only testing on Ruby 1.9.

bq. <em>Technically, Sorcerer should work on Ruby 1.8, but since Ripper is
1.9 I've only tried it on that platform.</em>

h2. Examples

<pre style="background: LightGray">
  sexp = [:binary, 
           [:var_ref, [:@ident, "a", [1, 0]]],
           :+,
           [:var_ref, [:@ident, "b", [1, 4]]]]
  puts Sorcerer.source(sexp)
</pre>

will generate

<pre style="background: LightGray">
  a + b
</pre>

Ripper may be used to produce the s-expressions used by Sorcerer.  The following will produce the same output.

<pre style="background: LightGrey">
  sexp = Ripper::SexpBuilder.new("a + b").parse
  puts Sorcerer.source(sexp)
</pre>

